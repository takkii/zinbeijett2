#!/usr/bin/env ruby
# frozen_string_literal: true

# vim: filetype=ruby

require 'kconv'

Encoding.default_internal = 'UTF-8'

# zinbeijett
module Zinbeijett
  module_function

  def version
    # puts 'この箇所は修正しない' + '本体を修正後、バージョンをあげる'
    puts 'zinbeijett2 and engine2 VERSION is : ' + '2.1.2'.toutf8.freeze
  end

  def start
    puts ''
    puts 'Start'.center(60, '-')

    puts <<-DOC
    == Contributing to zinbeijett

    GitHub account  : takkii
    GitLab instance : takkii
    Twitter account : @takkii

    ** Spectacle **

    Improve zinbeiw find function to work on the command line.

    ** version info **

    search match method use,

    operator      : 0.x.x

    match method  : 1.x.x

    minimum size  : 2.x.x

    > Thank you for reading to the last.
    DOC

    puts 'Start'.center(60, '-')
    puts ''
  end

  def help
    puts ''
    puts 'Command'.center(60, '-')

    puts <<-HELP

    [engine]

    < how to use >

    engine -z [ File name ] [ String or regular expression ]

    < Example >

    $ engine2 -z notojima.txt wajima

    ※ 全文検索エンジン  全文検索を行います。

    engine -a notojima.txt wajima

    ※ AND検索エンジン  全文より少し高速です。

    engine -n notojima.txt wajima

    ※ NOT検索エンジン  例の実行はwajima以外を出力します。

    engine -o notojima.txt wajima notojima

    ※ OR検索エンジン  条件式で2つの単語を使います。

    engine -m notojima.txt

    ※ mail検索エンジン　マッチパターンはメールアドレスのみです。

    HELP

    puts 'Command'.center(60, '-')
    puts ''
  end

  def soft
    puts 'Zinbeijett2 is minimum zinbeijett.'.toutf8
  end
end

v = /\Aversion\z/
ve = /\A[-][v]\z/
s = /\Astart\z/
so = /\A[-][s]\z/
co = /\A[-][h]\z/
com = /\Ahelp\z/

one = ARGV[0]

zi = Zinbeijett

if one.nil?
  zi.soft
elsif one.match?(v)
  zi.version
elsif one.match?(ve)
  zi.version
elsif one.match?(s)
  zi.start
elsif one.match?(so)
  zi.start
elsif one.match?(co)
  zi.help
elsif one.match?(com)
  zi.help
else
  puts 'Please choose an option.'.toutf8
end

__END__
